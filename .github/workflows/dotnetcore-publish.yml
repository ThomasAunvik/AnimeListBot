name: .NET Core Publish

on:
  push:
    branches: 
      - master
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: 'true'

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: AnimeListBot.zip
        path: /home/runner/work/AnimeListBot/AnimeListBot/AnimeListBot/bin/Release/netcoreapp3.1/
  publish:
    name: Publish to Server
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: AnimeListBot.zip
      
      - uses: montudor/action-zip@v0.1.0
        with:
          args: unzip -qq AnimeListBot.zip -d ./AnimeListBot
      
      - name: SCP build-files to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          key:  ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: ./AnimeListBot/*
          target: ${{ secrets.TARGET_UPLOAD }}
      - name: Execute Restart Command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_KEY }}
          script: ${{ secrets.RESTART_COMMAND }}
          
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: AnimeListBot.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AnimeListBot.zip
          asset_name: AnimeListBot.zip
          asset_content_type: application/zip
